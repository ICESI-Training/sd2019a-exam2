version: '3.3'

services:

    whoami:
      image: tutum/hello-world
      networks:
        - net
      ports:
        - "8088:80"
      logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: tutum
      deploy:
        restart_policy:
	    condition: on-failure
	    delay: 20s
	    max_attempts: 3
	    window: 120s
        mode: replicated
        replicas: 3
        placement:
          constraints: [node.role == worker]
        update_config:
          delay: 2s

    vizualizer:
        image: dockersamples/visualizer
        volumes:
           - /var/run/docker.sock:/var/run/docker.sock
        ports:
          - "8080:8080"
        networks:
          - net
        logging:
          driver: "fluentd"
          options:
           tag: visualizer   #TAG 
        deploy:
            restart_policy:
               condition: on-failure
               delay: 20s
               max_attempts: 3
               window: 120s
            mode: replicated # one container per manager node
            replicas: 1
            update_config:
              delay: 2s
            placement:
	       constraints: [node.role == manager]    
    fluentd:
      build: ./files/files_backend/fluentd
      volumes:
        - ./Logs:/fluentd/log
        #- ./fluentd/conf:/fluentd/etc
      ports:
        - "24224:24224"
        - "24224:24224/udp"
      networks:
        - net
      deploy:
        restart_policy:
             condition: on-failure
             delay: 20s
             max_attempts: 3
             window: 120s
        mode: replicated
        replicas: 1
        placement:
          constraints: [node.role == manager]
        update_config:
          delay: 2s

    elasticsearch:
      image: elastic/elasticsearch:6.4.3
      expose:
        - 9200
      ports:
        - "9200:9200"
      networks:
	-net
      environment:
	- bootstrap.memory_lock=true
	-"ES_JAVA_OPTS=-Xms512m -Xmx512m"
      logging:
	  driver: "json-file"
	  options:
	    max-size: 10M
	    max-file: 1
      deploy:
	restart_policy:
	  condition: on-failure
	  delay: 20s
	  max_attempts: 3
	  window: 120s
	mode: replicated
	replicas: 1
	placement:
	  constraints: [node.role == manager]
	update_config:
	  delay: 2s
	resources:
	  limit:
	    memory: 1000M
      volumes:
	- ./esdata:/usr/share/elasticsearch/data

    kibana:
      image: elastic/kibana:6.4.3
      ports:
        - "5601:5601"
      networks:
        - net
      logging:
        driver: "json-file"
        options:
           max-size: 10M
           max-file: 1        
      deploy:
        restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
        window: 120s
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      update_config:
        delay: 2s  
    db:
      build: ./Database
      ports: 
        -"3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: password
    php:
      build: ./Web/webphp
      ports: 
        -"8080:8080"
      
networks:
  net:
